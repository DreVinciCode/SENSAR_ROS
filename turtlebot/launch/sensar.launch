<launch>

  <node pkg="leg_detector" type="leg_detector" name="leg_detector" args="scan:=scan $(find leg_detector)/config/trained_leg_detector.yaml" output="screen"/>
    <param name="/leg_detector/fixed_frame" value="base_link"/>
    <param name="/leg_detector/leg_reliability_limit" value="0.2" type="double"/>

  <!-- <node name="velocity_tracker" pkg="people_velocity_tracker" type="tracker.py" respawn="true"/> -->
  <node name="sensar_ros_laserscan" pkg="sensar_ros" type="sensar_ros_laserscan" respawn="true"/>
  <node name="sensar_ros_map" pkg="sensar_ros" type="sensar_ros_map" respawn="true"/>
  <node name="sensar_ros_amcl_pose" pkg="sensar_ros" type="sensar_ros_amcl_pose" respawn="true"/>
  <node name="sensar_ros_particlecloud" pkg="sensar_ros" type="sensar_ros_particlecloud" respawn="true"/>
  <node name="sensar_ros_costmap" pkg="sensar_ros" type="sensar_ros_costmap" respawn="true"/>
  <node name="sensar_ros_path" pkg="sensar_ros" type="sensar_ros_path" respawn="true"/>
  <node name="sensar_ros_polygon" pkg="sensar_ros" type="sensar_ros_polygon" respawn="true"/>
  <node name="sensar_ros_point" pkg="sensar_ros" type="sensar_ros_point" respawn="true"/>
  <node name="sensar_ros_safetyzone" pkg="sensar_ros" type="sensar_ros_safetyzone" respawn="true"/>
  <node name="sensar_ros_legdetector" pkg="sensar_ros" type="sensar_ros_legdetector" respawn="true"/>


</launch>
